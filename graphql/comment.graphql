type Comment {
    id: ID! @globalId
    comment: String!
    sell: Sell! @belongsTo
    user: User! @belongsTo
    commentTime: DateTime!
}

extend type Query {
    comments: [Comment!]!
    @field(resolver: "App\\GraphQL\\Queries\\Comment\\commentQuery")
}

input comment {
    comment: String!
    @rules(
        apply: ["required", "min:10"]
        messages: {
            required: "El comentario es requerido."
            min: "El commentario tiene que tener un minimo de palabra"
        }
    )
    sellId: ID!
}
input updateComment {
    comment: String!
    @rules(
        apply: ["required", "min:10"]
        messages: {
            required: "El comentario es requerido."
            min: "El commentario tiene que tener un minimo de palabra"
        })
    commentID: ID!
}

extend type Mutation @middleware(checks: ["auth"]) {
    createComments(input: comment!): Comment
    @field(resolver: "App\\GraphQL\\Mutations\\Comment\\create")

    updateComments(input: updateComment!): Comment
    @field(resolver: "App\\GraphQL\\Mutations\\Comment\\update")

    deleteComments(id: ID!): Comment!
    @field(resolver: "App\\GraphQL\\Mutations\\Comment\\delete")
}


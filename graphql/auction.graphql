type Auction {
    id: ID! @globalId
    firstDateTime: DateTime! @rename(attribute: "first_dateTime")
    lastDateTime: DateTime! @rename(attribute: "last_dateTime")
    auctionsState: Int! @rename(attribute: "auctions_state")
    description: String!
    detail: String
    product: Product! @belongsTo
    type_pay: Type_pay! @belongsTo
    user: User! @belongsTo
    buddings: [Budding!]! @hasMany(type: "connection")
    receipts: [Receipt!]! @hasMany(type: "connection")

}

extend type Query @middleware(checks: ["auth","seller"])  {
    auction: [Auction!]! @field(resolver:"App\\GraphQL\\Queries\\Auction\\auctionQuery")
    findAuction(name: String!): [Auction!]! @field(resolver:"App\\GraphQL\\Queries\\Auction\\findAuction")

}

input CreateAuction {
    productId: ID!
    typeId: ID!
    description: String!  @rules(
        apply: ["required", "min:10"]
        messages: {
            required: "La descripcion es requerido."
            min: "La descripcion tiene que tener un minimo de palabra"
        })
    detail: String!
    @rules(
        apply: ["required", "min:10"]
        messages: {
            required: "La descripcion es requerido."
            min: "La descripcion tiene que tener un minimo de palabra"
        })
}

extend type Mutation @middleware(checks: ["auth","seller"])  {
    createAuction(input: CreateAuction!): Auction! @field(resolver:"App\\GraphQL\\Mutations\\Auction\\create")
}
